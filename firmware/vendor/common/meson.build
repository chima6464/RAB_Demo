module_sources_common = files(
    'app_beacon.c',
    'app_beacon.h',
    'app_health.c',
    'app_health.h',
    'app_heartbeat.c',
    'app_heartbeat.h',
    'app_privacy_beacon.h',
    'app_provison.c',
    'app_provison.h',
    'app_proxy.c',
    'app_proxy.h',
    'att_handle_index.h',
    'beacon.c',
    'ble_ll_ota.c',
    'blt_led.c',
    'blt_led.h',
    'blt_soft_timer.c',
    'blt_soft_timer.h',
    'cmd_interface.c',
    'cmd_interface.h',
    'default_config.h',
    'directed_forwarding.h',
    'draft_feature_vendor.h',
    'dual_mode_adapt.c',
    'dual_mode_adapt.h',
    'ev.c',
    'ev.h',
    'factory_reset.c',
    'fast_provision_model.c',
    'fast_provision_model.h',
    'flash_fw_check.c',
    'flash_fw_check.h',
    'generic_model.c',
    'generic_model.h',
    'led_cfg.h',
    'light.c',
    'light.h',
    'lighting_model_HSL.c',
    'lighting_model_HSL.h',
    'lighting_model_LC.c',
    'lighting_model_LC.h',
    'lighting_model_xyl.c',
    'lighting_model_xyL.h',
    'lighting_model.c',
    'lighting_model.h',
    'mesh_common.c',
    'mesh_common.h',
    'mesh_config.h',
    'mesh_fn.c',
    'mesh_fn.h',
    'mesh_lpn.c',
    'mesh_lpn.h',
    'mesh_node.c',
    'mesh_node.h',
    'mesh_ota.h',
    'mesh_property.c',
    'mesh_property.h',
    'mesh_test_cmd.c',
    'mesh_test_cmd.h',
    'myprintf.c',
    'myprintf.h',
    'ota_fw_ow.c',
    'remote_prov.h',
    'scene.c',
    'scene.h',
    'scheduler.c',
    'scheduler.h',
    'sdk_interface.h',
    'sensors_model.c',
    'sensors_model.h',
    'subnet_bridge.h',
    'system_time.c',
    'system_time.h',
    'time_model.c',
    'time_model.h',
    'user_ali_time.c',
    'user_ali_time.h',
    'user_ali.c',
    'user_ali.h',
    'user_config.h',
    'user_proc.c',
    'user_proc.h',
    'vendor_model.c',
    'vendor_model.h',
    'version.h'

)

module_sources_common_includes = include_directories('.')

lib_common = static_library('Common', 
    module_sources_common,
    c_args: ['-DAIS_ENABLE=0'],
    include_directories : [module_sources_common_includes, global_inc])

lib_common_dep = declare_dependency(
    link_with : lib_common,
    include_directories : module_sources_common_includes,
)

# This is a key step for making the dependency easily discoverable
# by the parent meson.build (or any other meson.build file) under a known name.
meson.override_dependency('Common', lib_common_dep)
message('Commonlib configured and its dependency "Commonlib" is available.')